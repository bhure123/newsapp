{"version":3,"sources":["Components/loading.gif","Components/NavBar.js","Components/NewsItem.js","Components/Spinner.js","Components/News.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","NavBar","React","createElement","className","Link","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","NewsItem","props","title","description","imageurl","newsurl","author","date","source","style","display","justifyContent","position","right","src","alt","Date","toGMTString","href","Spinner","loading","News","articles","setArticles","useState","setLoading","page","setPage","totalResults","setTotalResults","useEffect","async","setProgress","url","concat","country","category","pageSize","data","fetch","parsedData","json","updateNews","Fragment","margin","marginTop","string","charAt","toUpperCase","slice","InfiniteScroll","dataLength","length","next","hasMore","loader","map","element","key","urlToImage","publishedAt","name","defaultProps","App","Component","constructor","arguments","state","progress","this","setState","render","Router","LoadingBar","Switch","Route","exact","path","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.8fd1d0a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.a1f67e95.gif\";","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst NavBar =()=>{\n\n\n  \n      return (\n         <div>\n            <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\n               <div className=\"container-fluid\">\n                  <Link className=\"navbar-brand\" to=\"/\">NewsMonkey</Link>\n                  <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                     <span className=\"navbar-toggler-icon\"></span>\n                  </button>\n                  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                     <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n\n                        <li className=\"nav-item\">   <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">Home</Link></li>\n                        <li className=\"nav-item\">   <Link className=\"nav-link \" to=\"/business\"> Business     </Link> </li>\n                        <li className=\"nav-item\">   <Link className=\"nav-link \" to=\"/entertainment\"> Entertainment</Link> </li>\n                        <li className=\"nav-item\">   <Link className=\"nav-link \" to=\"/general\"> General      </Link> </li>\n                        <li className=\"nav-item\">   <Link className=\"nav-link \" to=\"/health\"> Health       </Link> </li>\n                        <li className=\"nav-item\">   <Link className=\"nav-link \" to=\"/science\"> Science      </Link> </li>\n                        <li className=\"nav-item\">   <Link className=\"nav-link \" to=\"/sports\"> Sports       </Link> </li>\n                        <li className=\"nav-item\">   <Link className=\"nav-link \" to=\"/technology\"> Technology   </Link> </li>\n\n\n                     </ul>\n\n                  </div>\n               </div>\n            </nav>\n         </div>\n      )\n   }\n\n\nexport default NavBar\n","import React from 'react';\n\nconst NewsItem =(props)=> {\n\n   \n      let { title, description, imageurl, newsurl, author, date, source } = props;\n      return (\n         <div className='my-3'>\n            <div className=\"card\" >\n\n               <div style={{display:'flex',justifyContent:'flex-end',position:'absolute',right:'0'}}>  <span className=\"badge rounded-pill bg-danger\" >{source} </span></div>\n\n               <img src={imageurl} className=\"card-img-top\" alt=\"..\" />\n               <div className=\"card-body\">\n                  <h5 className=\"card-title\">{title}</h5>\n\n                  <p className=\"card-text\">{description}..</p>\n                  <p className=\"card-text\"><small className=\"text-dark \">By {!author ? \"Unknown\" : author} on {new Date(date).toGMTString()}</small></p>\n                  <a href={newsurl} className=\"btn btn-sm btn-dark\">Read More </a>\n\n               </div>\n            </div>\n         </div>\n      )\n   }\n\n\nexport default NewsItem\n","import React from 'react'\nimport loading from './loading.gif'\n\nconst Spinner =()=>{\n      return (\n         <div className='text-center'>\n            <img src={loading} alt=\"loading\"/> \n\n         </div>\n      )\n   \n}\n\nexport default Spinner\n","import PropTypes from 'prop-types';\nimport React, { useState ,useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport NewsItem from './NewsItem';\nimport Spinner from './Spinner';\n\nconst News = (props) => {\n\n   const [articles, setArticles] = useState([])\n   const [loading, setLoading] = useState(true)\n   const [page, setPage] = useState(1)\n   const [totalResults, setTotalResults] = useState(0)\n   // document.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\n\n\n   const capitalizeFirstLetter = (string) => {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n   };\n\n\n\n   const updateNews = async () => {\n      props.setProgress(10);\n\n      const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2f5603074a6f44f0bef7b31e3ecb0535&page=${page}&pageSize=${props.pageSize}`;\n      setLoading(true);\n      let data = await fetch(url);\n      props.setProgress(30);\n      let parsedData = await data.json()\n      props.setProgress(70);\n\n      setArticles(parsedData.articles)\n      setTotalResults(parsedData.totalResults)\n      setLoading(false)\n\n      props.setProgress(100);\n   }\n\n   useEffect(() => {\n      updateNews();\n   }, [])\n\n   const fetchMoreData = async () => {\n      setPage(page + 1)\n\n      const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=2f5603074a6f44f0bef7b31e3ecb0535&page=${page}&pageSize=${props.pageSize}`;\n      let data = await fetch(url);\n      let parsedData = await data.json();\n      setArticles(articles.concat(parsedData.articles))\n      setTotalResults(parsedData.totalResults)\n   };\n\n\n\n   return (\n      <>\n         <h2 className=\"text-center\" style={{ margin: '35px 0px', marginTop: '90px' }}>\n            NewsMonkey - Top {capitalizeFirstLetter(props.category)} Headlines\n         </h2>\n         {loading && <Spinner />}\n         <InfiniteScroll\n            dataLength={articles.length}\n            next={fetchMoreData}\n            hasMore={articles.length !== totalResults}\n            loader={<Spinner />}\n         >\n            <div className=\"container\">\n               <div className=\"row\">\n                  {articles.map((element) => (\n                     <div className=\"col-md-4\" key={element.url}>\n                        <NewsItem\n                           title={element.title ? element.title.slice(0, 45) : \"\"}\n                           description={element.description ? element.description.slice(0, 88) : \"\"}\n                           imageurl={element.urlToImage}\n                           newsurl={element.url}\n                           author={element.author}\n                           date={element.publishedAt}\n                           source={element.source.name}\n                        />\n                     </div>\n                  ))}\n               </div>\n            </div>\n         </InfiniteScroll>\n      </>\n   );\n\n}\nNews.defaultProps = {\n   country: 'in',\n   pageSize: 8,\n   category: 'general'\n};\n\nNews.propTypes = {\n   country: PropTypes.string,\n   pageSize: PropTypes.number,\n   category: PropTypes.string,\n   // setProgress: PropTypes.func.isRequired,\n};\nexport default News;\n","import React, { Component } from 'react';\n// import NewsItem from './Components/NewsItem';\n// import Spinner from './Components/Spinner';\n// import PropTypes from 'prop-types';\n\n// import InfiniteScroll from 'react-infinite-scroll-component';\nimport './App.css';\nimport NavBar from './Components/NavBar';\nimport News from './Components/News';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport LoadingBar from 'react-top-loading-bar';\n\nexport default class App extends Component {\n  pageSize = 20;\n  state ={\n  progress:0\n  };\n  setProgress=(progress)=>{\n    this.setState({progress:progress});\n  };\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <NavBar />\n          <LoadingBar>\n            color='#f11946'\n            progress={this.state.progress}\n          </LoadingBar>\n         \n          <Switch>\n\n            <Route exact path=\"/\">< News setProgress={this.setProgress} key=\"general\" pageSize={this.pageSize} country=\"in\" category=\"general\" /></Route>\n            <Route exact path=\"/business\">< News setProgress={this.setProgress} key=\"business\" pageSize={this.pageSize} country=\"in\" category=\"business\" /></Route>\n            <Route exact path=\"/entertainment\">< News setProgress={this.setProgress} key=\"entertainment\" pageSize={this.pageSize} country=\"in\" category=\"entertainment\" /></Route>\n            <Route exact path=\"/general\">< News setProgress={this.setProgress} key=\"general\" pageSize={this.pageSize} country=\"in\" category=\"general\" /></Route>\n            <Route exact path=\"/health\">< News setProgress={this.setProgress} key=\"health\" pageSize={this.pageSize} country=\"in\" category=\"health\" /></Route>\n            <Route exact path=\"/science\">< News setProgress={this.setProgress} key=\"science\" pageSize={this.pageSize} country=\"in\" category=\"science\" /></Route>\n            <Route exact path=\"/sports\">< News setProgress={this.setProgress} key=\"sports\" pageSize={this.pageSize} country=\"in\" category=\"sports\" /></Route>\n            <Route exact path=\"/technology\">< News setProgress={this.setProgress} key=\"technology\" pageSize={this.pageSize} country=\"in\" category=\"technology\" /></Route>\n\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}